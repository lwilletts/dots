#!/bin/sh
#
# snip

generateInfo() {
    trackOld="$trackNew"
    printf "$trackOld\ninserttextforobs" > "$snipdir/playingnow.txt"

    path="$(mpvc -f "%path%")"

    # extract image directly out of audio file
    ffmpeg -hide_banner -loglevel panic -y -i "$path" \
           -vf scale=350:-1 "$snipdir/cover.png" && return 0

    # fallback to image within folder
    coverpath="$(printf '%s\n' "$path" | rev | cut -d/ -f 2- | rev)"

    # find first image in folder
    imgfile="$(fd . --full-path "$coverpath" -e jpg -e png -d 1 | head -n 1)"
    [ -e "$imgfile" ] && {
        convert "$imgfile" -resize 350x350 "$snipdir/cover.png"
        return
    }

    # replace image if there is no stream
    [ -e "$snipdir/cover.png" ] && \
        convert -size 350x350 xc:none "$snipdir/cover.png"
}

clean() {
    convert -size 350x350 xc:none "$snipdir/cover.png"
    printf '%s\n\n' "" > "$snipdir/playingnow.txt"
}

main() {
    snipdir=${snipdir:-/tmp/snip}
    [ ! -d "$snipdir" ] && mkdir -p "$snipdir"

    # init blank files
    convert -size 350x350 xc:none "$snipdir/cover.png"
    printf '%s\n\n' "" > "$snipdir/playingnow.txt"

    trackOld=""
    trackNew="$(mpvc -f "%artist% - %title%                        ")"

    trap clean EXIT

    while :; do
        [ "$trackNew" != "$trackOld" ] && generateInfo

        trackNew="$(mpvc -f "%artist% - %title%                        ")"
        [  "$trackNew" = "No files added to /tmp/mpvsocket." ] && {
            printf '%s\n' "" > "$snipdir/playingnow.txt"
            [ -e "$snipdir/cover.png" ] && \
                convert -size 350x350 xc:none "$snipdir/cover.png"
        }

        sleep 0.5
    done
}

main
