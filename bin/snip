#!/bin/sh
#
# snip

generateInfo() {
    trackOld="$trackNew"
    printf "$trackOld\ninserttextforobs" > "$snipdir/playingnow"

    path="$(mpvc -f "%path%")"

    # extract image directly out of audio file
    ffmpeg -hide_banner -loglevel panic -y -i "$path" \
           -vf scale=350:-1 "$snipdir/cover.png" && return 0

    # fallback to image within folder
    coverpath="$(printf '%s\n' "$path" | rev | cut -d/ -f 2- | rev)"

    for covername in $image_names; do
        test -e "$coverpath/$covername" && {
            convert "$coverpath/$covername" -resize 350x350 "$snipdir/cover.png"
            return
        }
    done

    # find first image in folder
    imgfile="$(fd . --full-path "$coverpath" -e jpg -e png -d 1 | head -n 1)"
    test -e "$imgfile" && {
        convert "$imgfile" -resize 350x350 "$snipdir/cover.png"
        return
    }

    # delete image if there is no stream
    test -e "$snipdir/cover.png" && rm "$snipdir/cover.png"
}

clean() {
    rm "$snipdir/cover.png"
    rm "$snipdir/playingnow"
}

main() {
    image_names="
    folder.jpg
    folder.png
    Cover.jpg
    Cover.png
    cover.jpg
    cover.png
    "

    snipdir=${snipdir:-/tmp/snip}
    test ! -d "$snipdir" && mkdir -p "$snipdir"

    trackOld=""
    trackNew="$(mpvc -f "%artist% - %title%                        ")"

    trap clean EXIT

    while :; do
        test "$trackNew" != "$trackOld" && generateInfo

        trackNew="$(mpvc -f "%artist% - %title%                        ")"
        test "$trackNew" = "No files added to /tmp/mpvsocket." && {
            printf '%s\n' "" > "$snipdir/playingnow"
            test -e "$snipdir/cover.png" && rm "$snipdir/cover.png"
        }

        sleep 0.5
    done
}

main
