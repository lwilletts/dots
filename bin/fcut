#!/bin/sh
#
# fcut

usage() {
    base=$(basename $0)

    cat >&2 << EOF
Usage:
    $base

$base requires mpv open in a ipc socket, ab-loop points set and exist locally.
EOF

    [ "$#" -eq 0 ] || exit "$1"
}

cutfile() {
    path="${1%%|*}"
    pointA="${1#*|}" pointA="${pointA%|*}" pointB="${1##*|}"
    fileExt="${path#*.}" fileName="${path%%.*}"

    case "$path" in
        *youtu*|watch*) usage 1 ;;
    esac

    [ -z "$pointB" ] && eof="true"

    case "$operation" in
        # preform lossy transcode to x264
        vidcord)
            case "$eof" in
                true)
                    ffmpeg -hide_banner -loglevel error -i "$path" \
                           -ss "$pointA" \
                           -max_muxing_queue_size 1024 \
                           -sws_flags lanczos -vf "scale=-1:720" \
                           -c:v libx264 -crf 24 -preset medium \
                           -c:a copy -map 0 -f mp4 "$fileName-$pointA-$pointB.mp4"
                            ;;
                *)
                    ffmpeg -hide_banner -loglevel error -i "$path" \
                           -ss "$pointA" -to "$pointB" \
                           -max_muxing_queue_size 1024 \
                           -sws_flags lanczos -vf "scale=-1:720" \
                           -c:v libx264 -crf 24 -preset medium \
                           -c:a copy -map 0 -f mp4 "$fileName-$pointA-$pointB.mp4"
                            ;;
            esac
            ;;
        # preform lossless transcode to dnxhd
        precise)
            case "$eof" in
                true)
                    ffmpeg -hide_banner -loglevel error -i "$path" \
                           -ss "$pointA" \
                           -c:v dnxhd -profile:v dnxhr_hq \
                           -pix_fmt yuv422p -c:a pcm_s16le -map 0 -f mov \
                           "$fileName-$pointA-$pointB.mov"
                    ;;
                *)
                    ffmpeg -hide_banner -loglevel error -i "$path" \
                           -ss "$pointA" -to "$pointB" \
                           -c:v dnxhd -profile:v dnxhr_hq \
                           -pix_fmt yuv422p -c:a pcm_s16le -map 0 -f mov \
                           "$fileName-$pointA-$pointB.mov"
                    ;;
            esac
            ;;
        # cuts to keyframe desyncing audio
        *)
            case "$eof" in
                true)
                    ffmpeg -hide_banner -loglevel error -i "$path" \
                           -ss "$pointA" -c copy -map 0 \
                           "$fileName-$pointA.$fileExt"
                    ;;
                *)
                    ffmpeg -hide_banner -loglevel error -i "$path" \
                           -ss "$pointA" -to "$pointB" -c copy -map 0 \
                           "$fileName-$pointA-$pointB.$fileExt"
                    ;;
            esac
            ;;
    esac


}

main() {
    SOCKET="/tmp/vidsocket"

    mpvc -S "$SOCKET" > /dev/null
    [ $? -eq 3 ] && usage 1

    case "$1" in
        -p|--precise|precise)   operation="precise" ;;
        -v|--vidcord|vidcord)   operation="vidcord" ;;
        -d|--default|default|*) operation="default" ;;
    esac

    cutfile "$(mpvc -S "$SOCKET" -f "%path%|%ab-loop-a%|%ab-loop-b%")"
}

main "$@"
