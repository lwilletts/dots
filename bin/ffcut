#!/bin/sh
#
# wildefyr - 2016 (c) MIT
# handy interface to use ffmpeg to cut video and audio from a larger file

usage() {
    cat >&2 << EOF
Usage: $(basename $0) [-f "file location"] [-t1 "00:00:00"] [-t2 "00:00:00"]
    -f  : Location of file to cut. (Required)
    -t1 : Timestamp to start cut. (Required)
    -t2 : Timestamp to end cut. (Required)
    -n  : Name to give new cut. (Optional)
    -q  : Surpress all text output.
    -h  : Print this help.
EOF

    test -z $1 && exit 1 || exit $1
}

intCheck() {
    test $1 -ne 0 2> /dev/null
    test $? -ne 2 || {
         printf '%s\n' "'$1' is not an integer." >&2
         exit 1
    }
}

validateDeps() {
    type ffmpeg > /dev/null 2>&1 || {
        printf '%s\n' "ffmpeg is not installed on your \$PATH." >&2
        exit 2
    }
}

# test if file given is even valid
testFile() {
    test -e "$FILE" || {
        printf '%s\n' "File does not exist. Exiting..."
        exit 2
    }

    ffprobe -hide_banner "$FILE" 2> /dev/null
    test $? -ne 0 && {
        printf '%s\n' "ffmpeg does not recognise the media format. Exiting..."
        exit 2
    }
}

# check if given timestamps are valid
timeStampCheck() {
    printf '%s' "$TIME" | grep -q -G -e "^\([0-9.]*:\)\{0,2\}[0-9.]*$" || {
        printf '%s\n' "Timestamp is not valid. Exiting."
        exit 3
    }

    intCheck "$DURATION"
}

ffmpegCut() {
    CUTS="$PWD/cuts"
    test ! -d "$CUTS" && mkdir -p "$CUTS"

    test "$NAME" || {
        COUNTER=1

        FORMAT=$(printf '%s\n' "$FILE" | rev | cut -d'.' -f 1 | rev)
        NAME=$(printf '%s\n' "$FILE" | rev | cut -d'.' -f 2- | rev) 
        NAME=$(printf '%s\n' "${NAME}-${COUNTER}.${FORMAT}")

        while test -e "$CUTS/$NAME"; do 
            COUNTER=$((COUNTER + 1))
            NAME=$(printf '%s\n' "$NAME" | rev | cut -d'-' -f 2- | rev) 
            NAME=$(printf '%s\n' "${NAME}-${COUNTER}.${FORMAT}")
        done
    }

    ffmpeg -hide_banner -loglevel panic \
           -ss "$TIME" -i "$FILE" -t "$DURATION" \
           -c copy -map 0 "$CUTS/$NAME"
}

main() {
    validateDeps

    test $# -eq 0 && usage 1

    for arg in "$@"; do
        test "$NAMEFLAG" = true && NAME="$arg"
        test "$FILEFLAG" = true && FILE="$arg"
        test "$TIMEFLAG" = true && TIME="$arg"
        test "$DURATIONFLAG" = true && DURATION="$arg"

        case "$arg" in
            -n)
                NAMEFLAG=true
                FILEFLAG=false
                TIMEFLAG=false
                DURATIONFLAG=false
                ;;
            -f)
                NAMEFLAG=false
                FILEFLAG=true
                TIMEFLAG=false
                DURATIONFLAG=false
                ;;
            -t)
                NAMEFLAG=false
                FILEFLAG=false
                TIMEFLAG=true
                DURATIONFLAG=false
                ;;
            -d)
                NAMEFLAG=false
                FILEFLAG=false
                TIMEFLAG=false
                DURATIONFLAG=true
                ;;
            -?)
                usage 1
                ;;
            *)
                NAMEFLAG=false
                FILEFLAG=false
                TIMEFLAG=false
                DURATIONFLAG=false
                ;;
        esac
    done

    test "$FILE" || usage 1
    test "$TIME" || usage 1
    test "$DURATION" || usage 1

    testFile
    timeStampCheck
    ffmpegCut
}

for arg in "$@"; do
    case $arg in
        -q|--quiet)       QUIETFLAG=true  ;;
        -h|--help|h|help) usage 0         ;;
    esac
done

test "$QUIETFLAG" = "true" && {
    main "$@" > /dev/null 2>&1
} || {
    main "$@"
}
