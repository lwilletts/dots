#!/bin/sh
#
# shlight

usage() {
    base=$(basename "$0")

    cat >&2 << EOF
Usage:
    $base [socket] [on|off]
EOF

    test $# -eq 0 || exit "$1"
}

# check if arg 1 is an integer
intCheck() {
    test "$1" -ne 0 2> /dev/null
    test "$?" -ne 2 || return 1
}

setpin() {
    intCheck "$1" && pin="$1" || exit 1

    case "$2" in
        "in"|"out") dir="$2" ;;
        *)          exit 1   ;;
    esac

    case "$3" in
        "0"|"1") value="$3" ;;
        *)       exit 1     ;;
    esac

    # initialise pin
    test ! -d "$GPIO/gpio$pin/" && printf '%s\n' "$pin" > "$GPIO/export"
    printf '%s\n' "$dir" > "$GPIO/gpio$pin/direction"
    printf '%s\n' "$value" > "$GPIO/gpio$pin/value"
}

setup() {
    GPIO="/sys/class/gpio"

    test ! -d "$GPIO" && {
        printf '%s\n' "No gpio directory found."
        exit 1
    }

    # set pins for encoder; select ASK/FSK; disable modulator
    for pin in 11 15 16 13 18 22; do
        setpin $pin out 0
    done
}

cleanup() {
    for pin in 11 15 16 13 18 22; do
        printf '%s\n' "$pin" > "$GPIO/unexport"
    done
}

main() {
    setup

    case "$1" in
        "1")
            for pin in 11 15 16; do
                setpin $pin out 1
            done
            ;;
        "2")
            for pin in 15 16; do
                setpin $pin out 1
            done
            ;;
        "all")
            exit 2
            ;;
    esac

    case "$2" in
        on)  setpin 13 out 1 ;;
        off) setpin 13 out 0 ;;
    esac

    # enable modulator briefly to transmit signal
    sleep 0.1
    setpin 22 out 1
    sleep 0.25
    setpin 22 out 0

    cleanup
}

main "$@"
