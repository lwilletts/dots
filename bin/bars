#!/bin/sh
#
# bars

# bar variables
barvar() {
    . fwmrc
    wmenv
    wmgaps
    wmcolours
    wmgroup

    BW=1
    bar_fg="#$ACTIVE"
    bar_bg="#$INACTIVE"
    bar_border="#808080"
    bar_active="%{F#$ACTIVE}"
    bar_inactive="%{F$bar_border}"
    bar_font=$(awk '/font/ {print $3}' < ~/.Xresources | cut -d',' -f 1)
}

runbar() {
    lemonbar -d -g "${barw}x${barh}+${barx}+${bary}" -B "${bar_bg}" \
        -F "${bar_fg}" -R "${bar_border}" -r "$BW" -f "${bar_font}" -n "$1"
}

datebar() {
    calender="urxvtc -e sh -c '3cal'"

    while :; do
        clock="$(dat)"

        buf=""
        buf="${buf} %{c}"
        buf="${buf} %{A:${calender}:} ${clock}  %{A}"

        printf '%s\n' "$buf"
        sleep 2
    done | runbar "datebar" | /bin/sh &
}

sysbar() {
    htop="urxvtc -e sh -c 'htop'"

    while :; do
        mem="$(free -m | awk '/Mem:/ {print $3}')/$(free -m | awk '/Mem:/ {print $2}')" buf=""
        buf="${buf} %{c}"
        buf="${buf} %{A:${htop}:} $(cpu t) / ${mem} %{A}"
        printf '%s\n' "$buf"
        sleep 2
    done | runbar "sysbar" | /bin/sh &
}

batbar() {
    while :; do
 
        buf=""
        buf="${buf} %{c}"
        buf="${buf} $(bat acpi) "

        printf '%s\n' "$buf"
        sleep 2
    done | runbar "batbar" | /bin/sh &
}

gpubartrigger() {
    while :; do
        process="$(ps x | awk '/lemonbar/ && /gpubar/ && !/awk/ {print $1}')"
        temp="$(gpu | cut -d\  -f 4 | cut -c 1-2)"

        case "$temp" in
            6[0-9]|7[0-9]|8[0-9]|9[0-9]|1[0-9])
                test -z "$process" && gpubar
                ;;
            *)
                test ! -z "$process" && kill -9 "$process"
                ;;
        esac

        sleep 1
    done
}

gpubar() {
    gotop="urxvtc -e sh -c 'gotop'"

    while :; do
        buf=""
        buf="${buf} %{c}"
        buf="${buf} %{A:${gotop}:} $(gpu) %{A}"

        printf '%s\n' "$buf"
        sleep 2
    done | runbar "gpubar" | /bin/sh &
}

volbar() {
    pulse="urxvtc -e sh -c 'pulsemixer'"

    while :; do
        vol="$(printf '%s\n' "$(pulsemixer --get-volume | cut -d\  -f 1)%")"

        case $(pulsemixer --get-mute) in
            0) syb="â™ª" ;;
            1) syb="_" ;;
        esac

        buf=""
        buf="${buf} %{c}"
        buf="${buf} %{A:${pulse}:} ${vol} ${syb}  %{A}"

        printf '%s\n' "$buf"
        sleep 0.1
    done | runbar "volbar" | /bin/sh &
}

musbartrigger() {
    while :; do
        process="$(ps x | awk '/lemonbar/ && /musbar/ && !/awk/ {print $1}')"

        mpvc -q
        case $? in
            2|3)
                test ! -z "$process" && kill -9 "$process"
                ;;
            0|1)
                test -z "$process" && musbar
                ;;
        esac

        sleep 0.1
    done
}

musbar() {
    cava="urxvtc -e sh -c 'cava'"

    while :; do
        mus="$(mpvc -f '%artist% / %title% / %remaining% / %volume%%' 2> /dev/null)"

        buf=""
        buf="${buf} %{c}"
        buf="${buf} %{A:${cava}:} ${mus} %{A}"

        printf '%s\n' "$buf"
        sleep 0.1
    done | runbar "musbar" | /bin/sh &
}

groupbarinfo() {
    test -n "$(find "$groupdir" -maxdepth 1 -name '?' -print -quit)" && {
        for groupfile in "$groupdir"/?; do
            group="$(printf '%s\n' "$groupfile" | rev | cut -d/ -f 1 | rev)"

            grep -q "$group" "$activegrp" && {
                activity="$bar_active"
            } || {
                activity="$bar_inactive"
            }

            cmd="group -t $group focus"
            wid="$(head -n 1 "$groupfile")"

            case "$1" in
                text)
                    printf '%s' "$(wname "$wid")   "
                    ;;
                *)
                    printf '%s' "$bar_inactive|$bar_active$activity%{A:$cmd:} $(wname "$wid") %{A}"
                    ;;
            esac
        done
    }
}

groupbartrigger() {
    matchwid() {
        for wid in $(lsw -a); do
            printf '%s\n' "$wid $(wname "$wid")"
        done
    }

    barw="$(txtw "$(groupbarinfo text)")"
    barw="$(echo "$barw * 0.78" | bc -l | cut -d. -f 1)"

    groupbar

    sleep 0.1
    wid="$(matchwid | grep "groupbar" | grep -v grep | cut -d\  -f 1)"

    while :; do
        # dynamically resize bar to text length
        barw="$(txtw "$(groupbarinfo text)")"
        barw="$(echo "$barw * 0.78" | bc -l | cut -d. -f 1)"
        curw="$(wattr w "$wid")"

        test "$barw" -ne "$curw" && {
            wrs "$((barw - curw))" 0 "$wid"
            chwso -l "$wid"
        }

        sleep 0.1
    done
}

groupbar() {
    while :; do
        buf=""
        buf="${buf} %{l}"
        buf="${buf} $(groupbarinfo | cut -d\| -f 2-)"

        printf '%s\n' "$buf"
        sleep 0.1
    done | runbar "groupbar" | /bin/sh &
}

main() {
    barvar

    SEC="$(lsm | grep -v "$PRI")"

    # bar geometry
    PX="$(mattr x "$PRI")"
    PW="$(mattr w "$PRI")"
    PH="$(mattr h "$PRI")"
    SH="$(mattr h "$SEC")"
    barx=$((PX + LGAP))
    bary=$((PH - BGAP + BGAP/2 - BGAP/5))
    barh=$((18 + BW*2))

    barw=50
    volbar

    barx=$((barx + barw + LGAP))
    barw=110
    datebar

    barx=$((barx + barw + LGAP))
    case "$(hostname)" in
        fyriousa)
            prevbarx=$barx
            prevbary=$bary
            barw=300
            barx=$((PX + PW + LGAP))
            bary=$((SH - BGAP + BGAP/2 - BGAP/5))
            gpubartrigger &
            barx=$((prevbarx - barw - LGAP))
            bary=$prevbary
            barx=$((barx + barw + LGAP))
            barw=$((PW - barx))
            groupbartrigger &
            ;;
        inferno)
            barw=50
            batbar
            ;;
    esac

    barw=500
    barx=$((PW - barw - RGAP))
    musbartrigger &
}

main "$@"
